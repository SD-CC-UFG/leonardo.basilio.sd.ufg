// Code generated by protoc-gen-go. DO NOT EDIT.
// source: NamingServer.proto

package grpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServiceRequest_ServiceType int32

const (
	ServiceRequest_AUTH      ServiceRequest_ServiceType = 0
	ServiceRequest_MESSAGING ServiceRequest_ServiceType = 1
)

var ServiceRequest_ServiceType_name = map[int32]string{
	0: "AUTH",
	1: "MESSAGING",
}

var ServiceRequest_ServiceType_value = map[string]int32{
	"AUTH":      0,
	"MESSAGING": 1,
}

func (x ServiceRequest_ServiceType) String() string {
	return proto.EnumName(ServiceRequest_ServiceType_name, int32(x))
}

func (ServiceRequest_ServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3a6792f453cbf7ff, []int{0, 0}
}

type ServiceRequest struct {
	Name                 ServiceRequest_ServiceType `protobuf:"varint,1,opt,name=name,proto3,enum=Chat.Grpc.ServiceRequest_ServiceType" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ServiceRequest) Reset()         { *m = ServiceRequest{} }
func (m *ServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceRequest) ProtoMessage()    {}
func (*ServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6792f453cbf7ff, []int{0}
}

func (m *ServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceRequest.Unmarshal(m, b)
}
func (m *ServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceRequest.Marshal(b, m, deterministic)
}
func (m *ServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceRequest.Merge(m, src)
}
func (m *ServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceRequest.Size(m)
}
func (m *ServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceRequest proto.InternalMessageInfo

func (m *ServiceRequest) GetName() ServiceRequest_ServiceType {
	if m != nil {
		return m.Name
	}
	return ServiceRequest_AUTH
}

type ServiceResponse struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceResponse) Reset()         { *m = ServiceResponse{} }
func (m *ServiceResponse) String() string { return proto.CompactTextString(m) }
func (*ServiceResponse) ProtoMessage()    {}
func (*ServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6792f453cbf7ff, []int{1}
}

func (m *ServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceResponse.Unmarshal(m, b)
}
func (m *ServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceResponse.Marshal(b, m, deterministic)
}
func (m *ServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceResponse.Merge(m, src)
}
func (m *ServiceResponse) XXX_Size() int {
	return xxx_messageInfo_ServiceResponse.Size(m)
}
func (m *ServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceResponse proto.InternalMessageInfo

func (m *ServiceResponse) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ServiceResponse) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterEnum("Chat.Grpc.ServiceRequest_ServiceType", ServiceRequest_ServiceType_name, ServiceRequest_ServiceType_value)
	proto.RegisterType((*ServiceRequest)(nil), "Chat.Grpc.ServiceRequest")
	proto.RegisterType((*ServiceResponse)(nil), "Chat.Grpc.ServiceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NamingServerClient is the client API for NamingServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NamingServerClient interface {
	GetServiceLocation(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceResponse, error)
}

type namingServerClient struct {
	cc *grpc.ClientConn
}

func NewNamingServerClient(cc *grpc.ClientConn) NamingServerClient {
	return &namingServerClient{cc}
}

func (c *namingServerClient) GetServiceLocation(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/Chat.Grpc.NamingServer/GetServiceLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NamingServerServer is the server API for NamingServer service.
type NamingServerServer interface {
	GetServiceLocation(context.Context, *ServiceRequest) (*ServiceResponse, error)
}

func RegisterNamingServerServer(s *grpc.Server, srv NamingServerServer) {
	s.RegisterService(&_NamingServer_serviceDesc, srv)
}

func _NamingServer_GetServiceLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamingServerServer).GetServiceLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chat.Grpc.NamingServer/GetServiceLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamingServerServer).GetServiceLocation(ctx, req.(*ServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NamingServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Chat.Grpc.NamingServer",
	HandlerType: (*NamingServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServiceLocation",
			Handler:    _NamingServer_GetServiceLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "NamingServer.proto",
}

func init() { proto.RegisterFile("NamingServer.proto", fileDescriptor_3a6792f453cbf7ff) }

var fileDescriptor_3a6792f453cbf7ff = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf2, 0x4b, 0xcc, 0xcd,
	0xcc, 0x4b, 0x0f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x74, 0xce, 0x48, 0x2c, 0xd1, 0x73, 0x2f, 0x2a, 0x48, 0x56, 0x2a, 0xe6, 0xe2, 0x03, 0x49, 0x65,
	0x26, 0xa7, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x59, 0x72, 0xb1, 0xe4, 0x25, 0xe6,
	0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x19, 0xa9, 0xea, 0xc1, 0xd5, 0xea, 0xa1, 0x2a, 0x84,
	0x71, 0x43, 0x2a, 0x0b, 0x52, 0x83, 0xc0, 0x5a, 0x94, 0xd4, 0xb8, 0xb8, 0x91, 0x04, 0x85, 0x38,
	0xb8, 0x58, 0x1c, 0x43, 0x43, 0x3c, 0x04, 0x18, 0x84, 0x78, 0xb9, 0x38, 0x7d, 0x5d, 0x83, 0x83,
	0x1d, 0xdd, 0x3d, 0xfd, 0xdc, 0x05, 0x18, 0x95, 0x4c, 0xb9, 0xf8, 0xe1, 0x66, 0x15, 0x17, 0xe4,
	0xe7, 0x15, 0xa7, 0x0a, 0xf1, 0x71, 0x31, 0x65, 0x16, 0x80, 0xed, 0xe4, 0x0c, 0x62, 0xca, 0x2c,
	0x10, 0x12, 0xe2, 0x62, 0x29, 0xc8, 0x2f, 0x2a, 0x91, 0x60, 0x52, 0x60, 0xd4, 0x60, 0x0d, 0x02,
	0xb3, 0x8d, 0x62, 0xb9, 0x78, 0x90, 0x3d, 0x23, 0xe4, 0xcb, 0x25, 0xe4, 0x9e, 0x5a, 0x02, 0x35,
	0xc9, 0x27, 0x3f, 0x39, 0xb1, 0x24, 0x33, 0x3f, 0x4f, 0x48, 0x12, 0xa7, 0x8b, 0xa5, 0xa4, 0xb0,
	0x49, 0x41, 0x1c, 0xa0, 0xc4, 0xe0, 0xc4, 0x16, 0xc5, 0x92, 0x5e, 0x54, 0x90, 0x9c, 0xc4, 0x06,
	0x0e, 0x24, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xef, 0xbd, 0x6f, 0x3a, 0x01, 0x00,
	0x00,
}
